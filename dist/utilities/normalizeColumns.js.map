{"version":3,"sources":["../../src/utilities/normalizeColumns.js"],"names":["unnormalizedColumns","userDefinedEnums","normalizedColumns","map","column","valueIsNullable","isNullable","Enum","find","item","dataType","udtName","name","databaseType","columnName","description","nullable","tableName","values"],"mappings":";;;;;;kBAQe,CACbA,mBADa,EAEbC,gBAFa,KAGkB;AAC/B,QAAMC,oBAAoBF,oBAAoBG,GAApB,CAAyBC,MAAD,IAAY;AAC5D,UAAMC,kBAAkBD,OAAOE,UAAP,KAAsB,KAA9C;;AAEA,UAAMC,OAAON,iBAAiBO,IAAjB,CAAuBC,IAAD,IAAU;AAC3C,aAAOL,OAAOM,QAAP,KAAoB,cAApB,IAAsCN,OAAOO,OAAP,KAAmBF,KAAKG,IAArE;AACD,KAFY,CAAb;;AAIA,UAAMC,eAAeT,OAAOM,QAAP,KAAoB,cAApB,GAAqC,SAASN,OAAOO,OAArD,GAA+DP,OAAOM,QAA3F;;AAEA,WAAO;AACLI,kBAAYV,OAAOU,UADd;AAELD,oBAAcA,YAFT;AAGLE,mBAAaR,OAAOA,KAAKQ,WAAL,IAAoB,IAA3B,GAAkC,IAH1C;AAILC,gBAAUX,eAJL;AAKLY,iBAAWb,OAAOa,SALb;AAMLC,cAAQX,OAAOA,KAAKW,MAAL,IAAe,IAAtB,GAA6B;AANhC,KAAP;AAQD,GAjByB,CAA1B;;AAmBA,SAAOhB,iBAAP;AACD,C","file":"normalizeColumns.js","sourcesContent":["// @flow\n\nimport type {\n  ColumnType,\n  EnumType,\n  UnnormalizedColumnType\n} from '../types';\n\nexport default (\n  unnormalizedColumns: $ReadOnlyArray<UnnormalizedColumnType>,\n  userDefinedEnums: $ReadOnlyArray<EnumType>\n): $ReadOnlyArray<ColumnType> => {\n  const normalizedColumns = unnormalizedColumns.map((column) => {\n    const valueIsNullable = column.isNullable === 'YES';\n\n    const Enum = userDefinedEnums.find((item) => {\n      return column.dataType === 'USER-DEFINED' && column.udtName === item.name;\n    });\n\n    const databaseType = column.dataType === 'USER-DEFINED' ? 'udt_' + column.udtName : column.dataType;\n\n    return {\n      columnName: column.columnName,\n      databaseType: databaseType,\n      description: Enum ? Enum.description || null : null,\n      nullable: valueIsNullable,\n      tableName: column.tableName,\n      values: Enum ? Enum.values || null : null\n    };\n  });\n\n  return normalizedColumns;\n};\n"]}