{"version":3,"sources":["../../src/utilities/normalizeColumns.js"],"names":["unnormalizedColumns","normalizedColumns","map","column","valueIsNullable","isNullable","databaseType","dataType","udtName","columnName","nullable","tableName"],"mappings":";;;;;;kBAOgBA,mBAAD,IAA6F;AAC1G,QAAMC,oBAAoBD,oBAAoBE,GAApB,CAAyBC,MAAD,IAAY;AAC5D,UAAMC,kBAAkBD,OAAOE,UAAP,KAAsB,KAA9C;;AAEA,UAAMC,eAAeH,OAAOI,QAAP,KAAoB,cAApB,GAAqC,SAASJ,OAAOK,OAArD,GAA+DL,OAAOI,QAA3F;;AAEA,WAAO;AACLD,kBADK;AAELG,kBAAYN,OAAOM,UAFd;AAGLC,gBAAUN,eAHL;AAILO,iBAAWR,OAAOQ;AAJb,KAAP;AAMD,GAXyB,CAA1B;;AAaA,SAAOV,iBAAP;AACD,C","file":"normalizeColumns.js","sourcesContent":["// @flow\n\nimport type {\n  ColumnType,\n  UnnormalizedColumnType\n} from '../types';\n\nexport default (unnormalizedColumns: $ReadOnlyArray<UnnormalizedColumnType>): $ReadOnlyArray<ColumnType> => {\n  const normalizedColumns = unnormalizedColumns.map((column) => {\n    const valueIsNullable = column.isNullable === 'YES';\n\n    const databaseType = column.dataType === 'USER-DEFINED' ? 'udt_' + column.udtName : column.dataType\n\n    return {\n      databaseType,\n      columnName: column.columnName,\n      nullable: valueIsNullable,\n      tableName: column.tableName\n    };\n  });\n\n  return normalizedColumns;\n};\n"]}